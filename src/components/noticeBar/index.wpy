<style lang="less" src="../../less/font.less"></style>
<style lang="less" src="./index.less"></style>
<template>
  <view class="noticebar {{icon ? 'icon-noticebar' : ''}}">
    <view class="icon-content" wx:if="{{icon}}">
      <text class="kai-iconfont kai-icon-broadcast"></text>
    </view>
    <view
      id="{{ componentId }}__content-wrap"
      class="noticebar-wrap"
      style="height: 18px; overflow: hidden; position: relative;"
    >
      <view
        animation="{{ animationData }}"
        id="{{ componentId }}__content"
        style="position: absolute; white-space: nowrap;"
      >
        {{ text }}
      </view>
    </view>
  </view>
</template>
<script>
import wepy from 'wepy'

export default class Noticebar extends wepy.component {
  props = {
    componentId: String,
    text: String,
    icon: Boolean
  }
  data = {
    animationData: {},
    currentComponent: {}
  }
  methods = {
    initNoticeBarScroll() {
      let componentId = this.componentId
      let currentComponent = {
        width: undefined,
        wrapWidth: undefined,
        animation: null,
        resetAnimation: null
      }
      wx.createSelectorQuery()
        .select(`#${componentId}__content`)
        .boundingClientRect(rect => {
          if (rect.width) {
            currentComponent.width = rect.width
            wx.createSelectorQuery()
              .select(`#${componentId}__content-wrap`)
              .boundingClientRect(rect => {
                currentComponent.wrapWidth = rect.width
                if (currentComponent.wrapWidth < currentComponent.width) {
                  let mstime = currentComponent.width / 40 * 1000
                  currentComponent.animation = wx.createAnimation({
                    duration: mstime,
                    timingFunction: 'linear'
                  })
                  currentComponent.resetAnimation = wx.createAnimation({
                    duration: 0,
                    timingFunction: 'linear'
                  })
                  this.currentComponent = currentComponent
                  this.methods.scrollNoticeBar.call(this, componentId, mstime)
                }
              })
              .exec()
          } else {
            console.warn('页面缺少 noticebar 元素')
          }
        })
        .exec()
    },

    scrollNoticeBar(componentId, mstime) {
      let currentComponent = this.currentComponent
      let resetAnimationData = currentComponent.resetAnimation.translateX(currentComponent.wrapWidth).step()
      this.animationData = resetAnimationData.export()
      this.$apply()
      let aninationData = currentComponent.animation.translateX(-mstime * 40 / 1000).step()
      setTimeout(() => {
        this.animationData = aninationData.export()
        this.$apply()
      }, 100)

      setTimeout(() => {
        this.methods.scrollNoticeBar.call(this, componentId, mstime)
      }, mstime)
    }
  }
}
</script>
